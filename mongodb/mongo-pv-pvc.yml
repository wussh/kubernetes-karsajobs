# Specifies the API version being used for this Kubernetes resource.
apiVersion: v1

# Specifies the type of resource, which is a "PersistentVolume" in this case.
kind: PersistentVolume

metadata:
  # Name for this PersistentVolume resource.
  name: mongo-pv

  # Namespace in which the PersistentVolume will be created.
  namespace: wush

  # Labels are key-value pairs used for organizing and categorizing objects.
  # Here, we label this PersistentVolume as "type: local."
  labels:
    type: local

spec:
  # Defines the capacity of the PersistentVolume.
  capacity:
    # Specifies the size of the storage, which is 1 Gigabyte.
    storage: 1Gi

  # Defines the access modes for the PersistentVolume.
  accessModes:
    # Allows ReadWriteOnce access mode, meaning it can be mounted by a single node for both reading and writing.
    - ReadWriteOnce

  # Defines the policy for reclaiming the PersistentVolume when it's released.
  persistentVolumeReclaimPolicy: Recycle

  # Specifies the StorageClass to which this PersistentVolume belongs.
  storageClassName: manual

  # Defines the host path where the volume will be mounted on the host machine.
  hostPath:
    # Specifies the path of the directory on the host machine.
    path: "/data/db"
---

# Specifies the API version being used for this Kubernetes resource.
apiVersion: v1

# Specifies the type of resource, which is a "PersistentVolumeClaim" in this case.
kind: PersistentVolumeClaim

metadata:
  # Name for this PersistentVolumeClaim resource.
  name: mongo-pv-claim

  # Namespace in which the PersistentVolumeClaim will be created.
  namespace: wush

spec:
  # Specifies the name of the StorageClass required by the claim.
  storageClassName: manual

  # Defines the minimum resources required by the volume.
  resources:
    # Specifies the minimum amount of compute resources required.
    requests:
      # Specifies the size of the storage requested, which is 1 Gigabyte.
      storage: 1Gi

  # Defines the access modes for the claim.
  accessModes:
    # Allows ReadWriteOnce access mode, meaning it can be mounted by a single node for both reading and writing.
    - ReadWriteOnce
