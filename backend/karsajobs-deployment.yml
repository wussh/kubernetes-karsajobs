# This section defines the API version being used for this Kubernetes resource.
apiVersion: apps/v1

# Specifies the type of resource, which is a "Deployment" in this case.
kind: Deployment

metadata:
  # Name for this Deployment resource.
  name: karsajobs

  # Namespace in which the Deployment will be created.
  namespace: wush

  # Labels are key-value pairs used for organizing and selecting objects.
  # Here, we label this Deployment as part of the "backend" application.
  labels:
    app: backend

spec:
  # The number of desired replicas (pods) for this Deployment.
  replicas: 1

  # Defines the selector used to match pods managed by this Deployment.
  selector:
    matchLabels:
      app: backend

  # Describes the pod template that this Deployment will create.
  template:
    metadata:
      # Labels applied to pods created from this template.
      labels:
        app: backend
    spec:
      # List of containers within the pod.
      containers:
        # Name of the container.
        - name: karsajobs
          # Docker image to be used for this container.
          image: ghcr.io/wussh/a433-microservices:karsajobs
          # Defines when the image should be pulled. "IfNotPresent" means pull if not already on the node.
          imagePullPolicy: IfNotPresent
          # Ports to be exposed from the container.
          ports:
            # Specifies the container port to expose on the pod's IP address.
            - containerPort: 8080
          # List of environment variables to set within the container.
          env:
            - name: APP_PORT
              value: "8080"
            - name: MONGO_HOST
              value: mongo
            - name: MONGO_USER
              value: root
            - name: MONGO_PASS
              value: toor
